<UserControl x:Class="UofM.HCI.tPab.App.ActiveReader.ActiveReaderApp" x:Name="arApp"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:src="clr-namespace:UofM.HCI.tPab.App.ActiveReader"
             xmlns:tpadcontrols="clr-namespace:UofM.HCI.tPab;assembly=tPadLib"
             xmlns:convertersLib="clr-namespace:UofM.HCI.tPab.Converters;assembly=tPadLib"
             xmlns:convertersApp="clr-namespace:UofM.HCI.tPab.App.ActiveReader.Converters"
             xmlns:menuBar="clr-namespace:UofM.HCI.tPab.App.ActiveReader"             
             mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300" Loaded="arApp_Loaded" SizeChanged="arApp_SizeChanged">

  <UserControl.Resources>
    <convertersLib:LayerScalingConverter x:Key="cLayerScaling" />
    <convertersLib:MultiplierConverter x:Key="cMultiplier" />
    <convertersLib:LayerRotationCenterConverter x:Key="cLayerRotationCenter" />
    <convertersLib:StatusVisibilityConverter x:Key="cStatusVisibility"/>
    <convertersLib:PageLoaderConverter x:Key="cPageLoader" />
    <convertersApp:StatusAndModeVisibilityConverter x:Key="cStatusAndModeVisibility" />
    <convertersApp:StatusAndBoolVisibilityConverter x:Key="cStatusAndBoolVisibility" />
    <convertersApp:StatusAndBoolBackgroundConverter x:Key="cStatusAndBoolBackground" />
  </UserControl.Resources>

  <!-- This is the outer wrapper which makes the paintable area of the application to be as big as the ducoment page -->
  <Grid x:Name="gOuterWrapper">
    <Grid.Width>
      <MultiBinding Converter="{StaticResource ResourceKey=cLayerScaling}">
        <Binding ElementName="arApp" Path="Profile.DocumentSize.Width"/>
        <Binding ElementName="arApp" Path="Container.WidthFactor"/>
      </MultiBinding>
    </Grid.Width>
    <Grid.Height>
      <MultiBinding Converter="{StaticResource ResourceKey=cLayerScaling}">
        <Binding ElementName="arApp" Path="Profile.DocumentSize.Height"/>
        <Binding ElementName="arApp" Path="Container.HeightFactor"/>
      </MultiBinding>
    </Grid.Height>

    <!-- This rectangle guarantees a correct placement of the layers - do not delete -->
    <Rectangle VerticalAlignment="Top" HorizontalAlignment="Left" 
               Width="{Binding ElementName=arApp, Path=Profile.Resolution.Width}" Height="{Binding ElementName=arApp, Path=Profile.Resolution.Height}"
               Stroke="Green" StrokeThickness="1" Fill="Transparent">
      <Rectangle.RenderTransform>
        <ScaleTransform ScaleX="{Binding ElementName=arApp, Path=WidthScalingFactor}"
                        ScaleY="{Binding ElementName=arApp, Path=HeightScalingFactor}"/>
      </Rectangle.RenderTransform>
    </Rectangle>

    <!-- This is the grid containing all the layers that are anchored to the page -->
    <!-- The transformation below are manipulated from the code behind. It could also be made through binding bu the response time is slower. -->
    <Grid x:Name="gAnchoredLayers" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Grid.RenderTransform>
        <TransformGroup>
          <RotateTransform x:Name="trCanvas" />
          <TranslateTransform x:Name="ttCanvas" />
        </TransformGroup>
      </Grid.RenderTransform>

      <!-- Here go all the other layers for content that's anchored to the document -->
      <Image x:Name="iDocument" Stretch="Fill" Width="{Binding ElementName=gAnchoredLayers, Path=ActualWidth}">
        <Image.Visibility>
          <MultiBinding Converter="{StaticResource ResourceKey=cStatusAndBoolVisibility}" ConverterParameter="Located,True,True">
            <Binding ElementName="arApp" Path="Device.Location.Status"/>
            <Binding ElementName="bShowPage" Path="IsChecked"/>
            <Binding ElementName="bCopyAndLock" Path="IsChecked"/>
          </MultiBinding>
        </Image.Visibility>
        <Image.Source>
          <MultiBinding Converter="{StaticResource ResourceKey=cPageLoader}">
            <Binding ElementName="arApp" Path="ActualPage"/>
            <Binding ElementName="arApp" Path="ActualDocument"/>
          </MultiBinding>
        </Image.Source>
      </Image>

      <!-- The first layer is for the highlights -->
      <Canvas x:Name="cHighlights" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Canvas.Visibility>
          <MultiBinding Converter="{StaticResource ResourceKey=cStatusAndModeVisibility}" ConverterParameter="Located">
            <Binding ElementName="arApp" Path="Device.Location.Status"/>
            <Binding ElementName="bHighlight" Path="IsChecked"/>
          </MultiBinding>
        </Canvas.Visibility>
        <!-- This rectange covering the whole area and almost transparent is necessary to detect the mouse events -->
        <!-- We cannot have the cHighlights canvas handle this events because it would need to opacity to be that low and then the highlight themselves would be almost transparent too -->
        <Rectangle Fill="White" Opacity="0.1" Canvas.Left="0" Canvas.Top="0" 
                   Width="{Binding ElementName=cHighlights, Path=ActualWidth}" Height="{Binding ElementName=cHighlights, Path=ActualHeight}"
                   MouseDown="cHighlights_MouseDown" MouseUp="cHighlights_MouseUp" MouseMove="cHighlights_MouseMove"/>
      </Canvas>

      <!-- This layer is for the search results -->
      <Canvas x:Name="cSearchResults" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

      <!-- This is the context menu for handling annotations -->
      <Grid.ContextMenu>
        <ContextMenu Name="contextMenu">
          <MenuItem Name="cm_deleteItem"  Header="Delete" Click="CMDelete_Click"/>
          <MenuItem Name="cm_searchItem" Click="CMSearch_Click"/>
          <Separator />
          <MenuItem Header="Add Annotation" Click="CMAnnotation_Click"/>
        </ContextMenu>
      </Grid.ContextMenu>
    </Grid>

    <!-- This is the grid containing all the layers that are anchored to the device - This content remains static as you move the device -->
    <Canvas x:Name="gFixedLayers" VerticalAlignment="Top" HorizontalAlignment="Left"
          Width="{Binding ElementName=arApp, Path=Profile.Resolution.Width}" 
          Height="{Binding ElementName=arApp, Path=Profile.Resolution.Height}" MouseDown="gFixedLayers_MouseDown">
      <Canvas.RenderTransform>
        <ScaleTransform ScaleX="{Binding ElementName=arApp, Path=WidthScalingFactor}"
                        ScaleY="{Binding ElementName=arApp, Path=HeightScalingFactor}"/>
      </Canvas.RenderTransform>

      <!-- Here go all the control layers that are fixed like the menues or the start-up and loading displays -->
      
      <!--The off-screen visualization for highlightings-->
      <menuBar:OffScreenVisualization Canvas.Top="0" Canvas.Left="0"
                                      Width="{Binding ElementName=gFixedLayers, Path=ActualWidth}" 
                                      Height="{Binding ElementName=gFixedLayers, Path=ActualHeight}"    
                                      ActualMarker="{Binding ElementName=arApp, Path=ActualPageObject.Highlights}"
                                      ActualIcon="ArrowHighlight.png"
                                      PageHeight="{Binding ElementName=arApp, Path=ActualHeight}"
                                      PageWidth="{Binding ElementName=arApp, Path=ActualWidth}"
                                      DeviceLocation="{Binding ElementName=arApp, Path=Device.Location.LocationCm}"
                                      HeightFactor="{Binding ElementName=arApp, Path=Container.HeightFactor}"
                                      WidthFactor="{Binding ElementName=arApp, Path=Container.WidthFactor}"
                                      DeviceRotation="{Binding ElementName=arApp, Path=Device.Location.RotationAngle}"
                                      PreviewMouseDown="cHighlights_MouseDown" PreviewMouseUp="cHighlights_MouseUp" PreviewMouseMove="cHighlights_MouseMove">
        <menuBar:OffScreenVisualization.Visibility>
          <MultiBinding Converter="{StaticResource ResourceKey=cStatusAndModeVisibility}" ConverterParameter="Located">
            <Binding ElementName="arApp" Path="Device.Location.Status"/>
            <Binding ElementName="bOffScreenVisualization" Path="IsChecked"/>
          </MultiBinding>
        </menuBar:OffScreenVisualization.Visibility>
      </menuBar:OffScreenVisualization>

      <!--The off-screen visualization for annotations-->
      <menuBar:OffScreenVisualization Canvas.Top="0" Canvas.Left="0"
                                      Width="{Binding ElementName=gFixedLayers, Path=ActualWidth}" 
                                      Height="{Binding ElementName=gFixedLayers, Path=ActualHeight}"    
                                      ActualMarker="{Binding ElementName=arApp, Path=ActualPageObject.Annotations}"
                                      ActualIcon="ArrowAnnotation.png"
                                      PageHeight="{Binding ElementName=arApp, Path=ActualHeight}"
                                      PageWidth="{Binding ElementName=arApp, Path=ActualWidth}"
                                      DeviceLocation="{Binding ElementName=arApp, Path=Device.Location.LocationCm}"
                                      HeightFactor="{Binding ElementName=arApp, Path=Container.HeightFactor}"
                                      WidthFactor="{Binding ElementName=arApp, Path=Container.WidthFactor}"
                                      DeviceRotation="{Binding ElementName=arApp, Path=Device.Location.RotationAngle}"
                                      PreviewMouseDown="cHighlights_MouseDown" PreviewMouseUp="cHighlights_MouseUp" PreviewMouseMove="cHighlights_MouseMove">
        <menuBar:OffScreenVisualization.Visibility>
          <MultiBinding Converter="{StaticResource ResourceKey=cStatusAndModeVisibility}" ConverterParameter="Located">
            <Binding ElementName="arApp" Path="Device.Location.Status"/>
            <Binding ElementName="bOffScreenVisualization" Path="IsChecked"/>
          </MultiBinding>
        </menuBar:OffScreenVisualization.Visibility>
      </menuBar:OffScreenVisualization>

      <!--The off-screen visualization for search results-->
      <menuBar:OffScreenVisualization Canvas.Top="0" Canvas.Left="0"
                                      Width="{Binding ElementName=gFixedLayers, Path=ActualWidth}" 
                                      Height="{Binding ElementName=gFixedLayers, Path=ActualHeight}"    
                                      ActualMarker="{Binding ElementName=arApp, Path=ActualPageObject.SearchResults}"
                                      ActualIcon="ArrowSearchResults.png"
                                      PageHeight="{Binding ElementName=arApp, Path=ActualHeight}"
                                      PageWidth="{Binding ElementName=arApp, Path=ActualWidth}"
                                      DeviceLocation="{Binding ElementName=arApp, Path=Device.Location.LocationCm}"
                                      HeightFactor="{Binding ElementName=arApp, Path=Container.HeightFactor}"
                                      WidthFactor="{Binding ElementName=arApp, Path=Container.WidthFactor}"
                                      DeviceRotation="{Binding ElementName=arApp, Path=Device.Location.RotationAngle}"
                                      PreviewMouseDown="cHighlights_MouseDown" PreviewMouseUp="cHighlights_MouseUp" PreviewMouseMove="cHighlights_MouseMove">
        <menuBar:OffScreenVisualization.Visibility>
          <MultiBinding Converter="{StaticResource ResourceKey=cStatusAndModeVisibility}" ConverterParameter="Located">
            <Binding ElementName="arApp" Path="Device.Location.Status"/>
            <Binding ElementName="bOffScreenVisualization" Path="IsChecked"/>
          </MultiBinding>
        </menuBar:OffScreenVisualization.Visibility>
      </menuBar:OffScreenVisualization>

      <Grid x:Name="gMenuLayer" Canvas.Top="0" Canvas.Left="0"
            Width="{Binding ElementName=gFixedLayers, Path=ActualWidth}" 
            Height="{Binding ElementName=gFixedLayers, Path=ActualHeight}">
        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Stretch" FlowDirection="LeftToRight" Margin="0,25,0,0">
          <ToggleButton x:Name="bHighlight" IsThreeState="False" Click="bHighlight_Click">Highlight</ToggleButton>
          <ToggleButton x:Name="bOffScreenVisualization" IsThreeState="false" IsEnabled="False" Margin="20,0,0,0">Off-Screen</ToggleButton>
          <ToggleButton x:Name="bShowPage" IsThreeState="False" Margin="20,0,0,0">Show Page</ToggleButton>
          <ToggleButton x:Name="bCopyAndLock" IsThreeState="False" Margin="20,0,0,0" Click="bCopyAndLock_Click" >Copy 8 Lock</ToggleButton>
          <Button x:Name="bSearch" Margin="20,0,0,0" Click="bSearch_Click" >Search</Button>
          
        </StackPanel>
      </Grid>

      <menuBar:AnnotationBar x:Name="annotationBar" Canvas.Left="440" Width="42" Height="{Binding ElementName=gFixedLayers, Path=ActualHeight}" 
                             ActualDocument="{Binding ElementName=arApp, Path=ActualDocument}" 
                             ActualPage="{Binding ElementName=arApp, Path=ActualPage}"
                             PageHeight="{Binding ElementName=gAnchoredLayers, Path=ActualHeight}"
                             DeviceLocation="{Binding ElementName=arApp, Path=Device.Location.LocationCm}"
                             HeightFactor="{Binding ElementName=arApp, Path=Container.HeightFactor}"/>

      <Grid x:Name="gStartup" Canvas.Top="0" Canvas.Left="0"
            Width="{Binding ElementName=gFixedLayers, Path=ActualWidth}" 
            Height="{Binding ElementName=gFixedLayers, Path=ActualHeight}"
            Visibility="{Binding ElementName=arApp, Path=Device.Location.Status, Converter={StaticResource ResourceKey=cStatusVisibility}, ConverterParameter=NotLocated}">
        <Label HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="40" FontWeight="Bold">Reading Helper</Label>
        <Label HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" Margin="0,70,0,0">Not Located</Label>
      </Grid>
      
      <!--This is the keyboard-->
      <tpadcontrols:TPadKeyboard x:Name="tpKeyboard" 
                                 EnterKeyPressed="tpKeyboard_EnterKeyPressed"
                                 AlphaNumericKeyPressed="tpKeyboard_AlphaNumericKeyPressed"
                                 Canvas.Top="{Binding ElementName=arApp, Path=KeyboardPosition}" Canvas.Left="0" 
                                 Width="{Binding ElementName=gFixedLayers, Path=ActualWidth}" Height="200"
                                 HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                                 Visibility="Hidden"/>
    </Canvas>

  </Grid>

  <UserControl.Background>
    <MultiBinding Converter="{StaticResource ResourceKey=cStatusAndBoolBackground}" ConverterParameter="Located,True,True">
      <Binding ElementName="arApp" Path="Device.Location.Status"/>
      <Binding ElementName="bShowPage" Path="IsChecked"/>
      <Binding ElementName="bCopyAndLock" Path="IsChecked"/>
    </MultiBinding>
  </UserControl.Background>
</UserControl>