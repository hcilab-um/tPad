<UserControl x:Class="UofM.HCI.tPab.App.ActiveReader.ActiveReaderApp" x:Name="arApp"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:src="clr-namespace:UofM.HCI.tPab;assembly=tPadLib"
             xmlns:convertersLib="clr-namespace:UofM.HCI.tPab.Converters;assembly=tPadLib"
             mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300" Loaded="arApp_Loaded" SizeChanged="arApp_SizeChanged">

  <UserControl.Resources>
    <convertersLib:LayerScalingConverter x:Key="cLayerScaling" />
    <convertersLib:MultiplierConverter x:Key="cMultiplier" />
    <convertersLib:LayerRotationCenterConverter x:Key="cLayerRotationCenter" />
  </UserControl.Resources>

  <!-- This is the outer wrapper which makes the paintable area of the application to be as big as the ducoment page -->
  <Grid x:Name="gOuterWrapper">
    <Grid.Width>
      <MultiBinding Converter="{StaticResource ResourceKey=cLayerScaling}">
        <Binding ElementName="arApp" Path="Profile.DocumentSize.Width"/>
        <Binding ElementName="arApp" Path="Container.WidthFactor"/>
      </MultiBinding>
    </Grid.Width>
    <Grid.Height>
      <MultiBinding Converter="{StaticResource ResourceKey=cLayerScaling}">
        <Binding ElementName="arApp" Path="Profile.DocumentSize.Height"/>
        <Binding ElementName="arApp" Path="Container.HeightFactor"/>
      </MultiBinding>
    </Grid.Height>

    <!-- This is the grid containing all the layers that are anchored to the page -->
    <!-- The transformation below are manipulated from the code behind. It could also be made through binding bu the response time is slower. -->
    <Grid x:Name="gAnchoredLayers" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Grid.RenderTransform>
        <TransformGroup>
          <RotateTransform x:Name="trCanvas" />
          <TranslateTransform x:Name="ttCanvas" />
        </TransformGroup>
      </Grid.RenderTransform>

      <!-- Here go all the other layers for content that's anchored to the document -->

      <!-- The first layer is for the highlights -->
      <Canvas x:Name="cHighlights" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <!-- This rectange covering the whole area and almost transparent is necessary to detect the mouse events -->
        <!-- We cannot have the cHighlights canvas handle this events because it would need to opacity to be that low and then the highlight themselves would be almost transparent too -->
        <Rectangle Fill="White" Opacity="0.1" Canvas.Left="0" Canvas.Top="0" 
                   Width="{Binding ElementName=cHighlights, Path=ActualWidth}" Height="{Binding ElementName=cHighlights, Path=ActualHeight}"
                   MouseDown="cHighlights_MouseDown" MouseUp="cHighlights_MouseUp" MouseMove="cHighlights_MouseMove"/>
      </Canvas>
    </Grid>

    <!-- This is the grid containing all the layers that are anchored to the device - This content remains static as you move the device -->
    <Canvas x:Name="gFixedLayers" VerticalAlignment="Top" HorizontalAlignment="Left"
          Width="{Binding ElementName=arApp, Path=Profile.Resolution.Width}" 
          Height="{Binding ElementName=arApp, Path=Profile.Resolution.Height}" MouseDown="gFixedLayers_MouseDown">
      <Canvas.RenderTransform>
        <ScaleTransform ScaleX="{Binding ElementName=arApp, Path=WidthScalingFactor}"
                        ScaleY="{Binding ElementName=arApp, Path=HeightScalingFactor}"/>
      </Canvas.RenderTransform>

      <!-- Here go all the control layers that are fixed like the menues or the start-up and loading displays -->

      <Grid x:Name="gMenuLayer" Canvas.Top="0" Canvas.Left="0" 
            Width="{Binding ElementName=gFixedLayers, Path=ActualWidth}" 
            Height="{Binding ElementName=gFixedLayers, Path=ActualHeight}">
        <Button VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,25,0,0" Click="Button_Click">Hello World</Button>
      </Grid>

      <Grid x:Name="gStartup" Canvas.Top="0" Canvas.Left="0" 
            Width="{Binding ElementName=gFixedLayers, Path=ActualWidth}" 
            Height="{Binding ElementName=gFixedLayers, Path=ActualHeight}">
        <Label HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="40" FontWeight="Bold">Reading Helper</Label>
      </Grid>
    </Canvas>

  </Grid>

</UserControl>
