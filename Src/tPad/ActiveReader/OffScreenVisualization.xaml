<UserControl x:Class="UofM.HCI.tPab.App.ActiveReader.OffScreenVisualization" x:Name="offScreen"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:convertersApp="clr-namespace:UofM.HCI.tPab.App.ActiveReader.Converters"
             xmlns:convertersLib="clr-namespace:UofM.HCI.tPab.Converters;assembly=tPadLib"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">

  <UserControl.Resources>
    <convertersApp:OffScreenItemLocationConverter x:Key="cOffScreenItemLocation" />
    <convertersApp:OffScreenItemRotationConverter x:Key="cOffScreenItemRotation" />
    <convertersLib:MultiplierConverter x:Key="cMultiplier" />

    <!-- Here comes the style template of the highlightings -->
    <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate>
            <ItemsPresenter />
          </ControlTemplate>
        </Setter.Value>
      </Setter>

      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>

      <Setter Property="ItemTemplate">
        <Setter.Value>
          <DataTemplate>
            <Grid>
              <Image x:Name="iArrow" Width="30" Height="28" Source="{Binding ElementName=offScreen, Path=ActualIcon}" />
              <Grid.Margin>
                <MultiBinding Converter="{StaticResource ResourceKey=cOffScreenItemLocation}" ConverterParameter="Margin">
                  <Binding ElementName="offScreen" Path="PageWidth"/>
                  <Binding ElementName="offScreen" Path="PageHeight"/>
                  <Binding Path="Position"/>
                  <Binding ElementName="offScreen" Path="DeviceLocation"/>
                  <Binding ElementName="offScreen" Path="WidthFactor"/>
                  <Binding ElementName="offScreen" Path="HeightFactor"/>
                  <Binding RelativeSource="{RelativeSource AncestorType=ListBox}" Path="ActualWidth"/>
                  <Binding RelativeSource="{RelativeSource AncestorType=ListBox}" Path="ActualHeight"/>
                  <Binding ElementName="iArrow" Path="ActualWidth"/>
                  <Binding ElementName="offScreen" Path="DeviceRotation"/>               
                </MultiBinding>
              </Grid.Margin>              
              <Grid.RenderTransform>
                <RotateTransform CenterX="{Binding ElementName=iArrow, Path=ActualWidth, Converter={StaticResource ResourceKey=cMultiplier}, ConverterParameter=0.5}" 
                                 CenterY="{Binding ElementName=iArrow, Path=ActualHeight, Converter={StaticResource ResourceKey=cMultiplier}, ConverterParameter=0.5}">
                  <RotateTransform.Angle>
                    <MultiBinding Converter="{StaticResource ResourceKey=cOffScreenItemRotation}" ConverterParameter="Angle">
                      <Binding ElementName="offScreen" Path="PageWidth"/>
                      <Binding ElementName="offScreen" Path="PageHeight"/>
                      <Binding Path="Position"/>
                      <Binding ElementName="offScreen" Path="DeviceLocation"/>
                      <Binding ElementName="offScreen" Path="WidthFactor"/>
                      <Binding ElementName="offScreen" Path="HeightFactor"/>
                      <Binding ElementName="offScreen" Path="DeviceRotation"/>
                    </MultiBinding>
                  </RotateTransform.Angle>
                </RotateTransform>
              </Grid.RenderTransform>
            </Grid>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListBoxItem}">
            <ContentPresenter VerticalAlignment="Top" HorizontalAlignment="Left"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

  </UserControl.Resources>

  <ListBox IsSynchronizedWithCurrentItem="True"
           ItemsSource="{Binding ElementName=offScreen, Path=ActualMarker}"
           HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
           ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled">
  </ListBox>

</UserControl>
